#class mapper open;

#map read map.tt;
#read mapper-paths.tt;

#alias setarea {
    #var roomarea %1;
};

#alias getmapname {
    #class getmapname open;
    #action {^%%1 -} {
        #map set roomname %%1;
        #map set roomarea $roomarea;
        maphere show;
        #class getmapname kill;
    }
    #class getmapname close;
    %1;
};

#alias maphere {
    #map get roomvnum roomvnum;
    #map get roomname roomname;
    #map get roomarea roomarea;
    #map get roomdesc roomdesc;
    #if {"%1" == "show"} {
        #showme <fca>Room vnum: $roomvnum;
        #showme <fca>Room name: $roomname;
        #showme <fca>Room area: $roomarea;
        #showme <fca>Room desc: $roomdesc;
    };
};

#function mapaction {
    #action {%1} {%2} 1;
};
    
#var mapdesc {
    {^    %1。%2}{%1。%2}
    {^    船老大 %1(%*)}{船老大 %1}
};

#var mapdesc-exclude {\^(    「.*)|\^(    这里明显的方向有.*)|\^(    这里唯一的出口有.*)|\^(    这里明显的出口有.*)}

#alias loadmap {
    #map leave;
    #var roomname {};
    #class loadmap open;
    #action {^%%1 -} {
        #class tmp open;
        #foreach {*mapdesc[%*]} {desc} {@mapaction{{$desc} {
               #regexp {$desc} {{$${mapdesc-exclude}}} {} {
                   mgdesc {${mapdesc[$desc]}};
                   maphere;
                   #if {"$$roomname" != ""} {maphere show;}
               };
        }}};
        #class tmp close;
        #delay 1 {
            #if {"$roomname" == ""} {
                #map goto %%1;
                maphere show;
            };
        };
    };
    #action {Room name: %S} {#class tmp kill; #class loadmap kill;};
    #class loadmap close;
    #split 7 2;
    #map flag vtmap on;
    l;
};

#alias unloadmap {
    #map leave;
    #unsplit; #split;
};

#alias mapnof { #map flag nofollow on; };
#alias mapf { #map flag nofollow off; };
#alias mapsize {#unsplit; #split %1 1};

    
#alias map {
    #regexp $roomarea {{.+}} { getmapname %1} {#showme <fca>当前地区为空; getmapname %1}; 
};

#alias mapdesc {
    #class tmp open;
    #action {^%%1 -} {
        #class tmp2 open;
        #foreach {*mapdesc[%*]} {desc} {
           @mapaction{{$desc} {
               maphere; 
               #regexp {$desc} {{$${mapdesc-exclude}}} {} {
                   mapdesc {$mapdesc[$desc]}};
               };
           };
        };
        #nop #action {^    %%%1。%%%2} {mapdesc %%%1。%%%2;};
        #class tmp2 close;
    };
    #class tmp close;
    maphere;
    #if {"%1" == ""} {
        l;
        #delay 1 {#class tmp2 kill; #class tmp kill;};
    } {
        #map set roomname $roomname|%1;
        maphere show;
    };
};

#alias roomdesc {
    maphere;
    #if {"$roomdesc" == ""} {
        #map set roomdesc %1;
    } {
        #map set roomname $roomname|%1;
    };
    maphere show;
};

#alias mi {#map info};
#alias mm {#map move %1; mi};
#alias mg {#map goto %1%*; mi};
#alias mgdesc {#map goto %*%1%*;};
#alias ml {#map list %*%1%*};
#alias mldesc {#map list {%*} {} {%1}};
#alias mlarea {#map list {%*} {} {} {%1}};

#alias mapnum {#map flag asciivnums};
#alias mapvoid {#map insert %1 void};
#alias savemap {#map write map.tt;};

#alias run {
    #if {"%1" == "%d"} {#map run {%1} {{%2}};} {#map run {%1%*} {{%2}};};
};

#alias rundesc {#map run {%*%1%*} {{%2}};};


#alias mazeexit {
    
    #map exit %1 command {
        #class mazewalk open;
        #var fromdir[north] south;
        #var fromdir[west] east;
        #var fromdir[east] west;
        #var fromdir[south] north;
        #var fromdir[up] down;
        #var fromdir[down] up;
        #var fromdir[northup] southdown;
        #var fromdir[westup] eastdown;
        #var fromdir[eastup] westdown;
        #var fromdir[southup] northdown;
        #var fromdir[northdown] southup;
        #var fromdir[westdown] eastup;
        #var fromdir[eastdown] westup;
        #var fromdir[southdown] northup;
        #var fromdir[southeast] northwest;
        #var fromdir[northwest] southeast;
        #var fromdir[southwest] northeast;
        #var fromdir[northeast] southwest;
        #var lastdir %2;
        #var found 0;
        #action {你逃跑失败。} {
            #delay 1 lastdir;
        } 1;
        #action {%3} {
            #showme <fca>到达目标地点：%4;
            #var found 1;
            #map goto %4;
            #class mazewalk kill;
        } 2;
        #action {这里明显的方向有 %%1、%%2 和 %%3。} {
            #showme <fca> 岔路自动停止;
            #var found 1;
            #map goto %4;
            #class mazewalk kill;
        } 3;
        #action {这里明显的方向有 %%1 和 %%2。} {
            #if {$found == 0} {
                #regex %%1 {$fromdir[$lastdir]} {
                    #showme going %%2;
                    #var lastdir %%2;
                    %%2;
                } {
                    #showme going %%1;
                    #var lastdir %%1;
                    %%1;
                };
            };
        };
        #class mazewalk close;
        set brief 1;
        %1;
    };
};

#alias mazeexit-special {
    
    #map exit %1 command {
        #class mazewalk open;
        #var fromdir[north] south;
        #var fromdir[west] east;
        #var fromdir[east] west;
        #var fromdir[south] north;
        #var fromdir[up] down;
        #var fromdir[down] up;
        #var fromdir[northup] southdown;
        #var fromdir[westup] eastdown;
        #var fromdir[eastup] westdown;
        #var fromdir[southup] northdown;
        #var fromdir[northdown] southup;
        #var fromdir[westdown] eastup;
        #var fromdir[eastdown] westup;
        #var fromdir[southdown] northup;
        #var fromdir[southeast] northwest;
        #var fromdir[northwest] southeast;
        #var fromdir[southwest] northeast;
        #var fromdir[northeast] southwest;
        #var lastdir %2;
        #var found 0;
        
        #action {你逃跑失败。} {
            #delay 1 lastdir;
        } 1;
        #action {%3} {
            #showme <fca>到达目标地点：%4;
            #var found 1;
            #map goto %4;
            #unticker walkmaze;
            set brief 1;
            #class mazewalk kill;
        } 2;
        #action {这里明显的方向有 %%1、%%2 和 %%3。} {
            #showme <fca> 岔路自动停止;
            #var found 1;
            #map goto %4;
            #unticker walkmaze;
            set brief 1;
            #class mazewalk kill;
        } 3;
        #action {这里明显的方向有 %%1 和 %%2。} {
            #if {$found == 0} {
                #regex %%1 {$fromdir[$lastdir]} {
                    #showme going %%2;
                    #var lastdir %%2;
                    %%2;
                } {
                    #showme going %%1;
                    #var lastdir %%1;
                    %%1;
                };
            };
        };
        #class mazewalk close;
        set brief 3;
        %1;
        #ticker walkmaze {l} 0.6;
    };
};

#alias guojiang-exit {
    #map exit %1 command {
        #class guojiang open;
        #action {^你吸了口气，一声“船家”，声音中正平和地远远传了出去。$} {
            #class tmp open;
            #action {^只听得江面上隐隐传来：“别急嘛，这儿正忙着呐……”} {#class tmp kill;#delay {3} {yell boat}};
            #class tmp close;
        };
        #action {^你使出吃奶的力气喊了一声：“船家”$} {
            #class tmp open;
            #action {^只听得江面上隐隐传来：“别急嘛，这儿正忙着呐……”} {#class tmp kill;#delay {3} {yell boat}};
            #class tmp close;
        };
        #var in_boat 0;
        #action {江心驶去。} {
            #var in_boat 1;
        };
        #action {^艄公说“到啦，上岸吧”，随即把一块踏脚板搭上堤岸。} {
            #if {$${in_boat} == 1} {
                #var in_boat 0;
                out;
                #map goto %*%3%*;
                #showme <fca>到达目标地点：%3;
                #class guojiang kill;
            };
        };
        #action {正等着你呢，上来吧。} {#class tmp kill;enter};
        #action {艄公将一块踏脚板搭上堤岸，} {#class tmp kill;enter};
        #action {^%*接过你递给的船资} {
            #class tmp open;
            #action {^只听得江面上隐隐传来：“别急嘛，这儿正忙着呐……”} {#class tmp kill;#delay {3} {yell boat}};
            #class tmp close;
        };
        #action {^你的车船通账上还剩%S，这一趟的船资%S。} {
            #class tmp open;
            #action {^只听得江面上隐隐传来：“别急嘛，这儿正忙着呐……”} {#class tmp kill;#delay {3} {yell boat}};
            #class tmp close;
        };
        #class guojiang close;
        ask shao gong about %2;
    };
};
#class mapper close;
